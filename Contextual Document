📝 Contextual Document – ParkEase (SEC Project)

📘 Project Overview

Project Name: ParkEase
Course: SEC (Skill Enhancement Course) Project
Team Size: 5 Members
Role: Group Leader
Duration: 5 Weeks

ParkEase is a smart parking management system designed to simplify the process of finding, booking, and managing parking spaces. It serves both users and parking operators with tailored interfaces and services.

🧠 Development Approach

We followed the MERN Stack (MongoDB, Express.js, React.js, Node.js) for our full-stack application development. To ensure a clean and organized codebase, we adopted the MVC (Model-View-Controller) architecture. This approach helped us in separating the data (Model), the user interface (View), and the business logic (Controller), enabling modularity, scalability, and easy maintenance.

Model: Defines the structure of the data, interactions with the database, and ensures that the data is consistent. In our case, this includes MongoDB schemas for users, parking lots, bookings, and payments.
View: The user interface that displays the data to the user. This is where React.js comes into play, building out dynamic and interactive components to enhance the user experience.
Controller: Acts as an intermediary between the Model and the View. It handles requests, processes data through the Model, and returns responses that update the View. Express.js in our backend performs this role.
✅ Technologies Used


Component	Technology
Frontend    	React.js (SPA)
Backend	      Node.js with Express.js
Database	    MongoDB (NoSQL)
Architecture	MVC (Model-View-Controller)
Maps        	Google Maps API
Hosting	      Netlify (Frontend), Render/Heroku (Backend)
Auth	        JWT (JSON Web Tokens) / Auth0 (optional)

📆 Project Timeline & Weekly Breakdown

Week 1
Created default home page and integrated Google Maps API
Listed and classified parking lots
Developed basic user dashboard interface
Week 2
Implemented basic booking flow and user journey
Connected backend to database (MongoDB/Supabase as backup)
Built basic user services including auth and booking logic
Week 3
Created operator dashboard
Implemented operator-specific services (slot management, approvals)
Integrated payment flow using Razorpay/Stripe
Week 4 (Planned)
Feature finalization
UI/UX improvements
Full-system testing and deployment setup
Week 5 (Planned)
Final deployment of frontend and backend
Presentation and demo preparation
Report writing and submission


🛠 Techniques and Tools Used

Trae AI: Used to generate and scaffold base code and logic for the project
Git & GitHub: Version control and team collaboration
Trello/Notion: Task and milestone tracking
Postman: API testing and debugging
MongoDB Atlas: Cloud database hosting
Responsive Design: Mobile-first development with CSS and Tailwind/Material UI

👨‍💻 Team Structure
Name	Role
Member 1	Frontend (User flow)
Member 2	Frontend (Operator dashboard)
Member 3	Backend, DB Integration
Member 4	UI/UX, Testing & Deployment
Member 5  Backend, Payment Integration

📄 Purpose of Document

This contextual document is created to serve as a reference point during the final report writing and evaluation process. It outlines the methodologies, tools, and technologies used throughout the development of ParkEase and ensures consistency in documentation.


